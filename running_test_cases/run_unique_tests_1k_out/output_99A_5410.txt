Test case passed: Input(0.0) => Output(0)

Test case passed: Input(1.49) => Output(1)

Test case passed: Input(1.50) => Output(2)

Test case passed: Input(2.71828182845904523536) => Output(3)

Test case passed: Input(3.14159265358979323846) => Output(3)

Test case passed: Input(12345678901234567890.1) => Output(12345678901234567890)

Test case passed: Input(123456789123456789.999) => Output(GOTO Vasilisa.)

Test case passed: Input(12345678901234567890.9) => Output(12345678901234567891)

Test case passed: Input(123456789123456788.999) => Output(123456789123456789)

Test case passed: Input(9.000) => Output(GOTO Vasilisa.)

Test case passed: Input(0.1) => Output(0)

Test case passed: Input(0.2) => Output(0)

Test case passed: Input(0.3) => Output(0)

Test case passed: Input(0.4) => Output(0)

Test case passed: Input(0.5) => Output(1)

Test case passed: Input(0.6) => Output(1)

Test case passed: Input(0.7) => Output(1)

Test case passed: Input(0.8) => Output(1)

Test case passed: Input(0.9) => Output(1)

Test case passed: Input(1.0) => Output(1)

Test case passed: Input(1.1) => Output(1)

Test case passed: Input(1.2) => Output(1)

Test case passed: Input(1.3) => Output(1)

Test case passed: Input(1.4) => Output(1)

Test case passed: Input(1.5) => Output(2)

Test case passed: Input(1.6) => Output(2)

Test case passed: Input(1.7) => Output(2)

Test case passed: Input(1.8) => Output(2)

Test case passed: Input(1.9) => Output(2)

Test case passed: Input(2.0) => Output(2)

Test case passed: Input(2.1) => Output(2)

Test case passed: Input(2.2) => Output(2)

Test case passed: Input(2.3) => Output(2)

Test case passed: Input(2.4) => Output(2)

Test case passed: Input(2.5) => Output(3)

Test case passed: Input(2.6) => Output(3)

Test case passed: Input(2.7) => Output(3)

Test case passed: Input(2.8) => Output(3)

Test case passed: Input(2.9) => Output(3)

Test case passed: Input(3.0) => Output(3)

Test case passed: Input(3.1) => Output(3)

Test case passed: Input(3.2) => Output(3)

Test case passed: Input(3.3) => Output(3)

Test case passed: Input(3.4) => Output(3)

Test case passed: Input(3.5) => Output(4)

Test case passed: Input(3.6) => Output(4)

Test case passed: Input(3.7) => Output(4)

Test case passed: Input(3.8) => Output(4)

Test case passed: Input(3.9) => Output(4)

Test case passed: Input(4.0) => Output(4)

Test case passed: Input(4.1) => Output(4)

Test case passed: Input(4.2) => Output(4)

Test case passed: Input(4.3) => Output(4)

Test case passed: Input(4.4) => Output(4)

Test case passed: Input(4.5) => Output(5)

Test case passed: Input(4.6) => Output(5)

Test case passed: Input(4.7) => Output(5)

Test case passed: Input(4.8) => Output(5)

Test case passed: Input(4.9) => Output(5)

Test case passed: Input(5.0) => Output(5)

Test case passed: Input(5.1) => Output(5)

Test case passed: Input(5.2) => Output(5)

Test case passed: Input(5.3) => Output(5)

Test case passed: Input(5.4) => Output(5)

Test case passed: Input(5.5) => Output(6)

Test case passed: Input(5.6) => Output(6)

Test case passed: Input(5.7) => Output(6)

Test case passed: Input(5.8) => Output(6)

Test case passed: Input(5.9) => Output(6)

Test case passed: Input(6.0) => Output(6)

Test case passed: Input(6.1) => Output(6)

Test case passed: Input(6.2) => Output(6)

Test case passed: Input(6.3) => Output(6)

Test case passed: Input(6.4) => Output(6)

Test case passed: Input(6.5) => Output(7)

Test case passed: Input(6.6) => Output(7)

Test case passed: Input(6.7) => Output(7)

Test case passed: Input(6.8) => Output(7)

Test case passed: Input(6.9) => Output(7)

Test case passed: Input(7.0) => Output(7)

Test case passed: Input(7.1) => Output(7)

Test case passed: Input(7.2) => Output(7)

Test case passed: Input(7.3) => Output(7)

Test case passed: Input(7.4) => Output(7)

Test case passed: Input(7.5) => Output(8)

Test case passed: Input(7.6) => Output(8)

Test case passed: Input(7.7) => Output(8)

Test case passed: Input(7.8) => Output(8)

Test case passed: Input(7.9) => Output(8)

Test case passed: Input(8.0) => Output(8)

Test case passed: Input(8.1) => Output(8)

Test case passed: Input(8.2) => Output(8)

Test case passed: Input(8.3) => Output(8)

Test case passed: Input(8.4) => Output(8)

Test case passed: Input(8.5) => Output(9)

Test case passed: Input(8.6) => Output(9)

Test case passed: Input(8.7) => Output(9)

Test case passed: Input(8.8) => Output(9)

Test case passed: Input(8.9) => Output(9)

Test case passed: Input(9.0) => Output(GOTO Vasilisa.)

Test case passed: Input(9.1) => Output(GOTO Vasilisa.)

Test case passed: Input(9.2) => Output(GOTO Vasilisa.)

Test case passed: Input(9.3) => Output(GOTO Vasilisa.)

Test case passed: Input(9.4) => Output(GOTO Vasilisa.)

Test case passed: Input(9.5) => Output(GOTO Vasilisa.)

Test case passed: Input(9.6) => Output(GOTO Vasilisa.)

Test case passed: Input(9.7) => Output(GOTO Vasilisa.)

Test case passed: Input(9.8) => Output(GOTO Vasilisa.)

Test case passed: Input(9.9) => Output(GOTO Vasilisa.)

Test case passed: Input(609942239104813108618306232517836377583566292129955473517174437591594761209877970062547641606473593416245554763832875919009472288995880898848455284062760160557686724163817329189799336769669146848904803188614226720978399787805489531837751080926098.1664915772983166314490532653577560222779830866949001942720729759794777105570672781798092416748052690224813237139640723361527601154465287615917169132637313918577673651098507390501962) => Output(609942239104813108618306232517836377583566292129955473517174437591594761209877970062547641606473593416245554763832875919009472288995880898848455284062760160557686724163817329189799336769669146848904803188614226720978399787805489531837751080926098)

Test case passed: Input(7002108534951820589946967018226114921984364117669853212254634761258884835434844673935047882480101006606512119541798298905598015607366335061012709906661245805358900665571472645463994925687210711492820804158354236327017974683658305043146543214454877759341394.20211856263503281388748282682120712214711232598021393495443628276945042110862480888110959179019986486690931930108026302665438087068150666835901617457150158918705186964935221768346957536540345814875615118637945520917367155931078965) => Output(7002108534951820589946967018226114921984364117669853212254634761258884835434844673935047882480101006606512119541798298905598015607366335061012709906661245805358900665571472645463994925687210711492820804158354236327017974683658305043146543214454877759341394)

Test case passed: Input(1950583094879039694852660558765931995628486712128191844305265555887022812284005463780616067.5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000) => Output(1950583094879039694852660558765931995628486712128191844305265555887022812284005463780616068)

Test case passed: Input(718130341896330596635811874410345440628950330.500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000) => Output(718130341896330596635811874410345440628950331)

Test case passed: Input(927925904158088313481229162503626281882161630091489367140850985555900173018122871746924067186432044676083646964286435457446768031295712712803570690846298544912543439221596866052681116386179629036945370280722.500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000) => Output(927925904158088313481229162503626281882161630091489367140850985555900173018122871746924067186432044676083646964286435457446768031295712712803570690846298544912543439221596866052681116386179629036945370280723)

Test case passed: Input(68289614863244584294178637364598054554769889.500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000) => Output(GOTO Vasilisa.)

Test case passed: Input(7536521504744364134984603189602839063535643888645969434165019366202558753840519.4999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999) => Output(GOTO Vasilisa.)

Test case passed: Input(646188694587964249318078225173.5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000) => Output(646188694587964249318078225174)

Test case passed: Input(7017472758334494297677068672222822550374695787171163207025095950296957261530.50) => Output(7017472758334494297677068672222822550374695787171163207025095950296957261531)

Test case passed: Input(259085737066615534998640212505663524594409165063310128108448186246980628179842202905722595400477937071746695941939306735605849342959111887834258250883469840846714848774368.50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000) => Output(259085737066615534998640212505663524594409165063310128108448186246980628179842202905722595400477937071746695941939306735605849342959111887834258250883469840846714848774369)

Test case passed: Input(682500858233333594535201113441004740771119672961581796618069185960107115823662126812159957094407454522028503739299.5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000) => Output(GOTO Vasilisa.)

Test case passed: Input(41203422675619090661099806687619.49999999999999999999999999999999999999999999999999999999999999999999999999999999999999999) => Output(GOTO Vasilisa.)

